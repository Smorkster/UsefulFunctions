# A generalized workflow to publish package to PyPI

name: Publish to PyPI

on:
  workflow_call:
    inputs:
      package-name:
        required: true
        type: string

permissions:
  contents: read
  id-token: write

jobs:
  release-build:
    runs-on: ubuntu-latest
    env:
      PACKAGE_NAME: ${{ inputs.package-name }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build tools and jq
        run: |
          python -m pip install --upgrade pip
          pip install build jq

      - name: Extract local version from pyproject.toml
        id: version
        run: |
          VERSION=$(grep '^version' $PACKAGE_NAME/pyproject.toml | head -1 | cut -d'"' -f2)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Get latest version on PyPI
        id: pypi
        run: |
          LATEST=$(curl -s https://pypi.org/pypi/$PACKAGE_NAME/json | jq -r '.info.version')
          echo "latest=$LATEST" >> "$GITHUB_OUTPUT"

      - name: Should publish?
        id: should_publish
        run: |
          if [ "${{ steps.version.outputs.version }}" != "${{ steps.pypi.outputs.latest }}" ]; then
            echo "publish=true" >> "$GITHUB_OUTPUT"
          else
            echo "publish=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Build package
        if: steps.should_publish.outputs.publish == 'true'
        working-directory: ./${{ env.PACKAGE_NAME }}
        run: python -m build

      - name: Publish to PyPI
        if: steps.should_publish.outputs.publish == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: ${{ env.PACKAGE_NAME }}/dist
